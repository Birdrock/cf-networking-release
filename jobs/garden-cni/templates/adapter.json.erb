<%=
    require 'json'

    def redirect_cidr
      return '' unless p("experimental_enable_proxy_redirect")
      if_p("experimental_proxy_redirect_cidr") do |cidr|
        return cidr unless cidr.nil? || cidr.empty?
      end
      if_link('cloud_controller_container_networking_info') do |link|
        return link.p("cc.internal_route_vip_range")
      end
      ''
    end

    toRender = {
      "cni_plugin_dir" => p("cni_plugin_dir"),
      "cni_config_dir" => p("cni_config_dir"),
      "bind_mount_dir" => "/var/vcap/data/garden-cni/container-netns",
      "state_file" => "/var/vcap/data/garden-cni/external-networker-state.json",
      "start_port" => p("nat_port_range_start"),
      "total_ports" => p("nat_port_range_size"),
      "log_prefix" => "cfnetworking",
      "search_domains" => p("search_domains"),
      "iptables_lock_file" => "/var/vcap/data/garden-cni/iptables.lock",
      "proxy_redirect_cidr": redirect_cidr,
      "enable_ingress_proxy_redirect": p("experimental_enable_ingress_proxy_redirect"),
			"proxy_port":          15001,
			"proxy_uid":           0,
    }

    JSON.pretty_generate(toRender)
%>
