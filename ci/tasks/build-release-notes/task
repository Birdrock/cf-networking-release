#!/bin/bash

set -e -u
set -o pipefail

tmp_dir=/tmp/notes
mkdir -p $tmp_dir

pushd $SOURCE_DIR > /dev/null
  if [ "${PRE_RELEASE}" = "true" ]; then
    #ship-wot (new tag does not exist yet)
    old_version=$(git tag --sort=version:refname | egrep "^\d+\.\d+\.\d+$" | tail -1)
    new_version=$(git rev-parse HEAD)
  else
    #ship-it (new tag has been created)
    old_version=$(git tag --sort=version:refname | egrep "^\d+\.\d+\.\d+$" | tail -2 | head -1)
    new_version=$(git tag --sort=version:refname | egrep "^\d+\.\d+\.\d+$" | tail -1)
  fi

  diff_string="$old_version...$new_version"
  echo "comparing $diff_string:"
  git log $diff_string | { egrep -o '\[\#(\d+)' || true; } | cut -d# -f2 | sort | uniq > $tmp_dir/stories.raw
  echo "found: "
  cat $tmp_dir/stories.raw
popd > /dev/null

while read -r story_id
do
  curl -s \
    -H "X-TrackerToken: ${TRACKER_API_TOKEN}" \
    "https://www.pivotaltracker.com/services/v5/stories/$story_id"
done < $tmp_dir/stories.raw > $tmp_dir/stories.json

cat $tmp_dir/stories.json | jq -r '"- "+.current_state+": ["+.name+"]("+.url+")"' > $OUTPUT_DIR/notes.md

echo "- Tested with [$OTHER_RELEASE_NAME](https://code.cloudfoundry.org/$OTHER_RELEASE_NAME) v$(cat other-release-version/number)" >> $OUTPUT_DIR/notes.md

echo "built: "
cat $OUTPUT_DIR/notes.md

