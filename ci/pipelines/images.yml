resources:
- name: dev-postgres-dockerfile
  type: git
  source:
    uri: git://github.com/cloudfoundry/cf-networking-release
    branch: develop
    paths:
      - ci/dockerfiles/dev-postgres

- name: dev-postgres-image
  type: docker-image
  source:
    username: ((dockerhub_username))
    password: ((dockerhub_password))
    email: ((dockerhub_email))
    repository: c2cnetworking/dev-postgres

- name: dev-postgres-ifb-dockerfile
  type: git
  source:
    uri: git://github.com/cloudfoundry/cf-networking-release
    branch: develop
    paths:
      - ci/dockerfiles/dev-postgres-ifb

- name: dev-postgres-ifb-image
  type: docker-image
  source:
    username: ((dockerhub_username))
    password: ((dockerhub_password))
    email: ((dockerhub_email))
    repository: c2cnetworking/dev-postgres-ifb

- name: dev-mysql-dockerfile
  type: git
  source:
    uri: git://github.com/cloudfoundry/cf-networking-release
    branch: develop
    paths:
      - ci/dockerfiles/dev-mysql

- name: dev-mysql-image
  type: docker-image
  source:
    username: ((dockerhub_username))
    password: ((dockerhub_password))
    email: ((dockerhub_email))
    repository: c2cnetworking/dev-mysql

- name: dev-mysql-5.6-dockerfile
  type: git
  source:
    uri: git://github.com/cloudfoundry/cf-networking-release
    branch: develop
    paths:
      - ci/dockerfiles/dev-mysql-5.6

- name: dev-mysql-5.6-image
  type: docker-image
  source:
    username: ((dockerhub_username))
    password: ((dockerhub_password))
    email: ((dockerhub_email))
    repository: c2cnetworking/dev-mysql-5.6

- name: deploy-dockerfile
  type: git
  source:
    uri: git://github.com/cloudfoundry/cf-networking-release
    branch: develop
    paths:
      - ci/dockerfiles/deploy

- name: deploy-image
  type: docker-image
  source:
    username: ((dockerhub_username))
    password: ((dockerhub_password))
    email: ((dockerhub_email))
    repository: c2cnetworking/deploy

- name: small-git-dockerfile
  type: git
  source:
    uri: git://github.com/cloudfoundry/cf-networking-release
    branch: develop
    paths:
      - ci/dockerfiles/small-git

- name: small-git-image
  type: docker-image
  source:
    username: ((dockerhub_username))
    password: ((dockerhub_password))
    email: ((dockerhub_email))
    repository: c2cnetworking/small-git

- name: deploy-light-dockerfile
  type: git
  source:
    uri: git://github.com/cloudfoundry/cf-networking-release
    branch: develop
    paths:
      - ci/dockerfiles/deploy-light

- name: deploy-light-image
  type: docker-image
  source:
    username: ((dockerhub_username))
    password: ((dockerhub_password))
    email: ((dockerhub_email))
    repository: c2cnetworking/deploy-light

- name: golang-1.12.x-tarball
  type: s3
  source:
    endpoint: storage.googleapis.com
    bucket: golang
    regexp: 'go(1\.12(\.\d+)?)\.linux-amd64\.tar.gz'

- name: cf-networking-release-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-networking-release
    branch: develop
    paths:
      - ci

- name: dev-mysql-image-version
  type: semver
  source:
    driver: s3
    region_name: us-west-2
    bucket: docker-image-versions
    key: dev-mysql-image/version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    initial_version: 0.0.1

- name: dev-postgres-image-version
  type: semver
  source:
    driver: s3
    region_name: us-west-2
    bucket: docker-image-versions
    key: dev-postgres-image/version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    initial_version: 0.0.1

- name: dev-postgres-ifb-image-version
  type: semver
  source:
    driver: s3
    region_name: us-west-2
    bucket: docker-image-versions
    key: dev-postgres-ifb-image/version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    initial_version: 4.9.49

- name: dev-mysql-5.6-image-version
  type: semver
  source:
    driver: s3
    region_name: us-west-2
    bucket: docker-image-versions
    key: dev-mysql-5.6-image/version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    initial_version: 0.0.1

- name: light-image-version
  type: semver
  source:
    driver: s3
    region_name: us-west-2
    bucket: docker-image-versions
    key: light-image/version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    initial_version: 0.0.1

- name: image-version
  type: semver
  source:
    driver: s3
    region_name: us-west-2
    bucket: docker-image-versions
    key: image/version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    initial_version: 0.0.1

- name: small-git-image-version
  type: semver
  source:
    driver: s3
    region_name: us-west-2
    bucket: docker-image-versions
    key: small-git-image/version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    initial_version: 0.0.1

- name: every-week
  type: time
  source:
    location: America/Tijuana
    start: 12:00 PM
    stop: 1:00 PM
    days: [Monday]

jobs:
- name: build-dev-postgres-image
  plan:
  - in_parallel:
    - get: cf-networking-release-ci
    - get: every-week
      trigger: true
    - get: dev-postgres-image-version
      params: {bump: minor}
    - get: dev-postgres-dockerfile
      trigger: true
    - get: golang-1.12.x-tarball
      trigger: true
  - task: add-golang
    file: cf-networking-release-ci/ci/tasks/add-golang-to-docker-context.yml
    input_mapping:
      dockerfile: dev-postgres-dockerfile
      golang-tarball: golang-1.12.x-tarball
    params:
      INPUT_DOCKERIMAGE_PATH: dockerfile/ci/dockerfiles/dev-postgres
  - put: dev-postgres-image
    params:
      build: docker-build-context
      tag: dev-postgres-image-version/version
      tag_as_latest: true
  - put: dev-postgres-image-version
    params: {file: dev-postgres-image-version/version}


- name: build-dev-postgres-ifb-image
  plan:
  - in_parallel:
    - get: cf-networking-release-ci
    - get: every-week
      trigger: true
    - get: dev-postgres-ifb-image-version
      params: {bump: minor}
    - get: dev-postgres-ifb-dockerfile
      trigger: true
    - get: golang-1.12.x-tarball
      trigger: true
  - task: add-golang
    file: cf-networking-release-ci/ci/tasks/add-golang-to-docker-context.yml
    input_mapping:
      dockerfile: dev-postgres-ifb-dockerfile
      golang-tarball: golang-1.12.x-tarball
    params:
      INPUT_DOCKERIMAGE_PATH: dockerfile/ci/dockerfiles/dev-postgres-ifb
  - put: dev-postgres-ifb-image
    params:
      build: docker-build-context
      build_args:
        KERNELVER: 4.9.36
      tag: dev-postgres-ifb-image-version/version
      tag_as_latest: true
  - put: dev-postgres-ifb-image-version
    params: {file: dev-postgres-ifb-image-version/version}

- name: build-dev-mysql-image
  plan:
  - in_parallel:
    - get: cf-networking-release-ci
    - get: every-week
      trigger: true
    - get: dev-mysql-image-version
      params: {bump: minor}
    - get: dev-mysql-dockerfile
      trigger: true
    - get: golang-1.12.x-tarball
      trigger: true
  - task: add-golang
    file: cf-networking-release-ci/ci/tasks/add-golang-to-docker-context.yml
    input_mapping:
      dockerfile: dev-mysql-dockerfile
      golang-tarball: golang-1.12.x-tarball
    params:
      INPUT_DOCKERIMAGE_PATH: dockerfile/ci/dockerfiles/dev-mysql
  - put: dev-mysql-image
    params:
      build: docker-build-context
      tag: dev-mysql-image-version/version
      tag_as_latest: true
  - put: dev-mysql-image-version
    params: {file: dev-mysql-image-version/version}

- name: build-dev-mysql-5.6-image
  plan:
  - in_parallel:
    - get: cf-networking-release-ci
    - get: every-week
      trigger: true
    - get: dev-mysql-5.6-image-version
      params: {bump: minor}
    - get: dev-mysql-5.6-dockerfile
      trigger: true
    - get: golang-1.12.x-tarball
      trigger: true
  - task: add-golang
    file: cf-networking-release-ci/ci/tasks/add-golang-to-docker-context.yml
    input_mapping:
      dockerfile: dev-mysql-5.6-dockerfile
      golang-tarball: golang-1.12.x-tarball
    params:
      INPUT_DOCKERIMAGE_PATH: dockerfile/ci/dockerfiles/dev-mysql-5.6
  - put: dev-mysql-5.6-image
    params:
      build: docker-build-context
      tag: dev-mysql-5.6-image-version/version
      tag_as_latest: true
  - put: dev-mysql-5.6-image-version
    params: {file: dev-mysql-5.6-image-version/version}

- name: build-deploy-image
  plan:
  - get: every-week
    trigger: true
  - get: deploy-dockerfile
    trigger: true
  - get: image-version
    params: {bump: minor}
  - put: deploy-image
    params:
      build: deploy-dockerfile/ci/dockerfiles/deploy
      tag: image-version/version
      tag_as_latest: true
  - put: image-version
    params: {file: image-version/version}

- name: build-small-git-image
  plan:
  - get: every-week
    trigger: true
  - get: small-git-dockerfile
    trigger: true
  - get: small-git-image-version
    params: {bump: minor}
  - put: small-git-image
    params:
      build: small-git-dockerfile/ci/dockerfiles/small-git
      tag: small-git-image-version/version
      tag_as_latest: true
  - put: small-git-image-version
    params: {file: small-git-image-version/version}

- name: build-deploy-light-image
  plan:
  - get: every-week
    trigger: true
  - get: light-image-version
    params: {bump: minor}
  - get: deploy-light-dockerfile
    trigger: true
  - put: deploy-light-image
    params:
      build: deploy-light-dockerfile/ci/dockerfiles/deploy-light
      tag: light-image-version/version
      tag_as_latest: true
  - put: light-image-version
    params: {file: light-image-version/version}
